<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
      xmlns:os="http://www.mulesoft.org/schema/mule/os"
      xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
      xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">
<flow name="schedulerFlow" doc:id="aff4106d-d2f6-4366-940a-a380dcb1cf73" >
    <scheduler doc:name="Scheduler" doc:id="58b7c776-fbee-4753-9bea-f6cc3e037efd" >
        <scheduling-strategy >
            <fixed-frequency frequency="${scheduler.frequency}" startDelay="${scheduler.start.delay}"/>
        </scheduling-strategy>
    </scheduler>
    <flow-ref doc:name="queryFlow" doc:id="ada07859-8839-4751-9623-68a08d31a472" name="queryFlow" />
    <logger level="INFO" doc:name="Log Workers to sync" doc:id="65934ef1-2939-4fab-bde9-1886331527ea" message="#['Workers to sync: ' ++ write(payload)]" />
		<flow-ref name="businessLogicFlow" doc:name="businessLogicFlow" doc:id="e16bf02c-b833-47de-afd5-2329ce1fab2b" />
    <error-handler >
        <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY">
            <flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow"/>
        </on-error-propagate>
    </error-handler>
</flow>
<flow name="queryFlow">
        <os:retrieve key="watermark" target="lastQueryTimestamp"
            doc:name="Retrieve lastQueryTimestamp">
            <os:default-value ><![CDATA[#[read(p('watermark.default.expression'))]]]></os:default-value>
        </os:retrieve>
        <ee:transform doc:name="Prepare Get Workers request" doc:id="0e2062da-4a79-471a-bbf5-80038e92ce9b">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
    ns0#Get_Workers_Request: {
        ns0#Request_Criteria: {
            ns0#Transaction_Log_Criteria_Data: {
                ns0#Transaction_Date_Range_Data: {
                    ns0#Updated_From: vars.lastQueryTimestamp,
                    ns0#Updated_Through: (now() - |PT6S|)
                }
            },
            ns0#Exclude_Inactive_Workers: true
        },
        ns0#Response_Group: {
            ns0#Include_Reference: true,
            ns0#Include_Personal_Information: true,
            ns0#Include_Transaction_Log_Data: true,
            ns0#Include_User_Account: true
        }
    }
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <workday:human-resources operation="Get_Workers" doc:name="Get Workers from Workday" doc:id="a625e264-0f16-4d5a-b6bc-2df5471ee4fe" config-ref="Workday_Config"/>
		<ee:transform doc:name="Filter response" doc:id="29e11f39-d7ad-4e29-b095-3d7ea3d22f09">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
ns ns0 urn:com.workday/bsvc
var data = if (payload.ns0#Get_Workers_Response.ns0#Response_Data != null) 
((payload.ns0#Get_Workers_Response.ns0#Response_Data.*ns0#Worker
filter ($.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address != null 
and $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address != ''))
distinctBy $.ns0#Worker_Data.ns0#Personal_Data.ns0#Contact_Data.ns0#Email_Address_Data.ns0#Email_Address)
else null
---
if(data != null)
	data.Worker_Data map {
		city : $.Personal_Data.Contact_Data.Address_Data.Municipality,
		country: $.Personal_Data.Contact_Data.Address_Data.Country_Reference.ID,
		email: $.Personal_Data.Contact_Data.Email_Address_Data.Email_Address,
		firstname : $.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name,
		homephone : $.Personal_Data.Contact_Data.Phone_Data.Phone_Number,
		lastname : $.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name,
		state : $.Personal_Data.Contact_Data.Address_Data.Country_Region_Reference.ID,
		street : $.Personal_Data.Contact_Data.Address_Data.Address_Line_Data,
		username : $.User_Account_Data.User_Name,
		zip : $.Personal_Data.Contact_Data.Address_Data.Postal_Code
} else []
]]></ee:set-payload>
            </ee:message>
			<ee:variables>
				<ee:set-variable variableName="workdayDate"><![CDATA[%dw 2.0
output application/java
ns ns0 urn:com.workday/bsvc
---
payload.ns0#Get_Workers_Response.Request_Criteria.Transaction_Log_Criteria_Data.Transaction_Date_Range_Data.Updated_Through]]></ee:set-variable>
			</ee:variables>
        </ee:transform>
		<os:store key="watermark" failOnNullValue="false" doc:name="Store lastQueryTimestamp" objectStore="watermarkStore">
			<os:value ><![CDATA[#[vars.workdayDate]]]></os:value>
        </os:store>

    </flow>
</mule>


        
